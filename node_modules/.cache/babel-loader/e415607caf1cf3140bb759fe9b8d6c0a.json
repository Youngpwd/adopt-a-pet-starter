{"ast":null,"code":"import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\nexport const handlers = [rest.get('/types', (_req, res, ctx) => {\n  return res(ctx.status(200), ctx.json(types));\n}), rest.get('/animals', (req, res, ctx) => {\n  const type = req.url.searchParams.get('type');\n  const query = req.url.searchParams.get('query');\n  let response = animals.animals;\n\n  if (type !== '') {\n    response = response.filter(animal => animal.type.toLowerCase() === type.toLowerCase());\n  }\n\n  if (query !== '') {\n    response = response.filter(animal => animal.contact.address.state.toLowerCase().includes(query.toLowerCase()) || animal.name.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  return res(ctx.status(200), ctx.json(response));\n}), rest.get('/animals/:id', (req, res, ctx) => {\n  const {\n    id\n  } = req.params;\n  let response = details[id];\n\n  if (!response) {\n    return res(ctx.status(404));\n  }\n\n  return res(ctx.status(200), ctx.json(response));\n})];","map":{"version":3,"sources":["C:/Code/Projects/codecademy/react_apps/adopt-a-pet-starter/src/mocks/handlers.js"],"names":["rest","types","animals","details","handlers","get","_req","res","ctx","status","json","req","type","url","searchParams","query","response","filter","animal","toLowerCase","contact","address","state","includes","name","id","params"],"mappings":"AAAA,SAASA,IAAT,QAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CACtBJ,IAAI,CAACK,GAAL,CAAS,QAAT,EAAmB,CAACC,IAAD,EAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,SAAOD,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,EAAkBD,GAAG,CAACE,IAAJ,CAAST,KAAT,CAAlB,CAAV;AACD,CAFD,CADsB,EAItBD,IAAI,CAACK,GAAL,CAAS,UAAT,EAAqB,CAACM,GAAD,EAAMJ,GAAN,EAAWC,GAAX,KAAmB;AACtC,QAAMI,IAAI,GAAGD,GAAG,CAACE,GAAJ,CAAQC,YAAR,CAAqBT,GAArB,CAAyB,MAAzB,CAAb;AACA,QAAMU,KAAK,GAAGJ,GAAG,CAACE,GAAJ,CAAQC,YAAR,CAAqBT,GAArB,CAAyB,OAAzB,CAAd;AACA,MAAIW,QAAQ,GAAGd,OAAO,CAACA,OAAvB;;AAEA,MAAIU,IAAI,KAAK,EAAb,EAAiB;AACfI,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CACRC,MAAD,IAAYA,MAAM,CAACN,IAAP,CAAYO,WAAZ,OAA8BP,IAAI,CAACO,WAAL,EADjC,CAAX;AAGD;;AACD,MAAIJ,KAAK,KAAK,EAAd,EAAkB;AAChBC,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CACRC,MAAD,IACEA,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuBC,KAAvB,CACGH,WADH,GAEGI,QAFH,CAEYR,KAAK,CAACI,WAAN,EAFZ,KAGAD,MAAM,CAACM,IAAP,CAAYL,WAAZ,GAA0BI,QAA1B,CAAmCR,KAAK,CAACI,WAAN,EAAnC,CALO,CAAX;AAOD;;AACD,SAAOZ,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,EAAkBD,GAAG,CAACE,IAAJ,CAASM,QAAT,CAAlB,CAAV;AACD,CApBD,CAJsB,EAyBtBhB,IAAI,CAACK,GAAL,CAAS,cAAT,EAAyB,CAACM,GAAD,EAAMJ,GAAN,EAAWC,GAAX,KAAmB;AAC1C,QAAM;AAAEiB,IAAAA;AAAF,MAASd,GAAG,CAACe,MAAnB;AACA,MAAIV,QAAQ,GAAGb,OAAO,CAACsB,EAAD,CAAtB;;AAEA,MAAI,CAACT,QAAL,EAAe;AACb,WAAOT,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,CAAV;AACD;;AAED,SAAOF,GAAG,CAACC,GAAG,CAACC,MAAJ,CAAW,GAAX,CAAD,EAAkBD,GAAG,CAACE,IAAJ,CAASM,QAAT,CAAlB,CAAV;AACD,CATD,CAzBsB,CAAjB","sourcesContent":["import { rest } from 'msw';\nimport types from './data/types.json';\nimport animals from './data/animals.json';\nimport details from './data/details.json';\n\nexport const handlers = [\n  rest.get('/types', (_req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(types));\n  }),\n  rest.get('/animals', (req, res, ctx) => {\n    const type = req.url.searchParams.get('type');\n    const query = req.url.searchParams.get('query');\n    let response = animals.animals;\n\n    if (type !== '') {\n      response = response.filter(\n        (animal) => animal.type.toLowerCase() === type.toLowerCase()\n      );\n    }\n    if (query !== '') {\n      response = response.filter(\n        (animal) =>\n          animal.contact.address.state\n            .toLowerCase()\n            .includes(query.toLowerCase()) ||\n          animal.name.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n    return res(ctx.status(200), ctx.json(response));\n  }),\n  rest.get('/animals/:id', (req, res, ctx) => {\n    const { id } = req.params;\n    let response = details[id];\n\n    if (!response) {\n      return res(ctx.status(404));\n    }\n\n    return res(ctx.status(200), ctx.json(response));\n  })\n];\n"]},"metadata":{},"sourceType":"module"}